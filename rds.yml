AWSTemplateFormatVersion: '2010-09-09'
Description: Create a MySQL RDS t2.micro instance

Parameters:
  DBUsername:
    Description: The database admin account username
    Type: String
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    MinLength: 1
    MaxLength: 16
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    Description: The database admin account password
    NoEcho: true
    Type: String
    MinLength: 8
    MaxLength: 41
    ConstraintDescription: must be between 8 and 41 characters.

Resources:
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
        # Replace with your private subnet IDs (inside your VPC)
        - subnet-044c408cc769c1756
        - subnet-0807575c5c4832094

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL access
      VpcId: vpc-03a5756900369f61d   # Replace with your VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0   # (For test/demo only; restrict in production!)

  MyRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: myrds-RJ
      EngineVersion: 8.0.35
      Engine: mysql
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !GetAtt MySecurityGroup.GroupId
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      PubliclyAccessible: true
      BackupRetentionPeriod: 0
      MultiAZ: false

Outputs:
  RDSInstanceEndpoint:
    Description: RDS Endpoint
    Value: !GetAtt MyRDSInstance.Endpoint.Address